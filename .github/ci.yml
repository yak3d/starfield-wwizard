name: StarfieldVT Build

on:
  push:
    branches:
      - main
    tags:
      - 'v**' # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest

    env:
      Solution_Name: StarfieldWwizard.sln
      Test_Project_Path: your-test-project-path
      Wap_Project_Directory: StarfieldWwizard 
      Wap_Project_Path: StarfieldWwizard\StarfieldWwizard.csproj

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      
      - name: Get short SHA
        run: echo "SHORT_SHA=$("${{ github.sha }}".SubString(0, 8))" >> $env:GITHUB_ENV
      
      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v2
      
      # Execute all unit tests in the solution
      #- name: Execute unit tests
      #  run: dotnet test
      
      - name: Restore the application
        run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
        env:
          Configuration: ${{ matrix.configuration }}
      
      - name: Decode the pfx
        run: |
          $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
          $certificatePath = Join-Path -Path $env:Wap_Project_Directory -ChildPath GitHubActionsWorkflow.pfx
          [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)
      
      - name: Create the app package
        run: msbuild $env:Wap_Project_Path /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode /p:AppxBundle=$env:Appx_Bundle /p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}
        env:
          Appx_Bundle: Always
          Appx_Bundle_Platforms: x86|x64
          Appx_Package_Build_Mode: StoreUpload
          Configuration: ${{ matrix.configuration }}
      
      - name: Remove the pfx
        run: Remove-Item -path $env:Wap_Project_Directory\GitHubActionsWorkflow.pfx
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
        with:
          name: starfieldvt-${{ env.SHORT_SHA }}
          path: ${{ env.Wap_Project_Directory }}\bin\Release\net8.0-windows
  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      # gets the short sha to append it to the archive name
      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
      - name: Confirm git commit SHA output
        run: echo ${{ env.COMMIT_SHORT_SHA }}
      - name: Download artifact from last job
        uses: actions/download-artifact@v4
      - name: ls files
        run: ls -l
      - name: Zip Artifact
        run: cd starfield-wwizard-${{ env.COMMIT_SHORT_SHA }}*; zip -r ../StarfieldWwizard-${{  github.ref_name }}.zip *
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: StarfieldWwizard-*.zip
